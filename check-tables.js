const { Pool } = require('pg');\n\nconst pool = new Pool({\n    user: 'mpurwadi',\n    host: 'localhost',\n    database: 'opsapps',\n    password: 'pratista17',\n    port: 5432,\n});\n\nasync function checkTableSchemas() {\n    try {\n        // Check attendance_records table\n        const attendanceSchema = await pool.query(`\n            SELECT \n                column_name, \n                data_type, \n                is_nullable,\n                column_default\n            FROM information_schema.columns \n            WHERE table_name = 'attendance_records'\n            ORDER BY ordinal_position;\n        `);\n        \n        console.log('Attendance Records Table Schema:');\n        console.log('----------------------------------------');\n        if (attendanceSchema.rows.length > 0) {\n            attendanceSchema.rows.forEach(row => {\n                console.log(`${row.column_name} (${row.data_type}) ${row.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'} ${row.column_default ? `DEFAULT ${row.column_default}` : ''}`);\n            });\n        } else {\n            console.log('Table does not exist');\n        }\n        \n        // Check todo_list table\n        const todoSchema = await pool.query(`\n            SELECT \n                column_name, \n                data_type, \n                is_nullable,\n                column_default\n            FROM information_schema.columns \n            WHERE table_name = 'todo_list'\n            ORDER BY ordinal_position;\n        `);\n        \n        console.log('\\nTODO List Table Schema:');\n        console.log('----------------------------------------');\n        if (todoSchema.rows.length > 0) {\n            todoSchema.rows.forEach(row => {\n                console.log(`${row.column_name} (${row.data_type}) ${row.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'} ${row.column_default ? `DEFAULT ${row.column_default}` : ''}`);\n            });\n        } else {\n            console.log('Table does not exist');\n        }\n        \n        // Check logbook_entries table\n        const logbookSchema = await pool.query(`\n            SELECT \n                column_name, \n                data_type, \n                is_nullable,\n                column_default\n            FROM information_schema.columns \n            WHERE table_name = 'logbook_entries'\n            ORDER BY ordinal_position;\n        `);\n        \n        console.log('\\nLogbook Entries Table Schema:');\n        console.log('----------------------------------------');\n        if (logbookSchema.rows.length > 0) {\n            logbookSchema.rows.forEach(row => {\n                console.log(`${row.column_name} (${row.data_type}) ${row.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'} ${row.column_default ? `DEFAULT ${row.column_default}` : ''}`);\n            });\n        } else {\n            console.log('Table does not exist');\n        }\n        \n    } catch (error) {\n        console.error('Error checking table schemas:', error);\n    } finally {\n        await pool.end();\n    }\n}\n\ncheckTableSchemas();